{"version":3,"sources":["utils/auth.js","utils/mutations.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","components/Footer.js","components/GlobalTotalChart.js","components/GlobalNewChart.js","components/GlobalCard.js","components/CountryTotalChart.js","components/CountryNewChart.js","components/CountryCard.js","components/StateCard.js","components/TimelineCases.js","components/TimelineDeaths.js","utils/localStorage.js","pages/Homepage.js","utils/API.js","utils/queries.js","pages/SavedSearch.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN_USER","gql","ADD_USER","SAVE_STATE","REMOVE_STATE_SEARCH","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","error","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","data","Auth","login","console","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","loginUser","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","to","className","src","alt","Toggle","aria-controls","Collapse","id","Nav","loggedIn","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","handleModalClose","Footer","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","GlobalTotalChart","state","loaded","fetch","then","response","json","responseJson","setState","globalData","Active","Recovered","Deaths","Spinner","animation","role","width","height","labelLine","label","dataKey","map","entry","key","length","PureComponent","GlobalNewChart","NewConfirmed","NewRecovered","NewDeaths","GlobalCard","loading","world","Card","border","Confirmed","toLocaleString","Row","Col","xs","md","format","Last_Update","React","Component","CountryTotalChart","countryData","US","Summary","CountryNewChart","CountryCard","us","StateCard","style","paddingTop","paddingLeft","paddingBottom","toUpperCase","confirmed","deaths","newConfirmed","newDeaths","Chart","apiData","setApiData","Positive","positiveIncrease","deathIncrease","useEffect","componentDidMount","margin","top","right","left","bottom","strokeDasharray","removeStateId","stateId","savedStateIds","JSON","parse","updatedSavedStateIds","filter","savedStateId","stringify","Homepage","searchedUsState","setSearchedUsState","searchInput","setSearchInput","holdStateId","setHoldStateId","stateData","setSavedStateIds","saveState","stateIdArr","query","toLowerCase","log","ok","Error","lastUpdate","Slug_State","handleSaveState","find","search","input","Jumbotron","e","sm","lg","TimelineCases","TimelineDeaths","GET_ME","SavedStateSearch","removeStateSearch","useQuery","userData","me","handleDeleteStateSearch","savedStateSearch","justifyContent","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","component","SavedSearch","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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CD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,IAAIuJ,kBACpB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACCD,SAAUtJ,EAAK,GAAGuJ,kBACnB,CACC7J,KAAM,QACN4J,SAAUtJ,EAAK,GAAGuJ,iBAClBtD,OAAQjG,EAAK,GAAGwJ,iBAnI5B,4CAPa,sBA+Ib,OA5IAC,qBAAU,YAHG,mCAITC,KACD,IA4IC,6BACKN,EAAW,kBAAC,KAAD,CACR/C,MAAO,IACPC,OAAQ,IACRtG,KACIoJ,EAEJO,OAAQ,CACJC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAIzC,kBAAC,KAAD,CAAeC,gBAAgB,QAC/B,kBAAC,KAAD,CAAOvD,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAMA,QAAQ,WAAWxB,KAAK,aAEjB,OCGdkE,OAxKf,WAAkB,IAAD,EACiBxK,mBAAS,IAD1B,mBACNyK,EADM,KACGC,EADH,iDAOb,8BAAAxJ,EAAA,4DACgB,iDADhB,SAE2B2F,MADX,kDADhB,cAEUE,EAFV,gBAGuBA,EAASC,OAHhC,OAGU3F,EAHV,OAKIqJ,EACI,CAAC,CACGpD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIwJ,eAClB,CACCvD,OAAQjG,EAAK,IAAIw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","file":"static/js/main.94635b4a.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// page for mutations \nimport gql from 'graphql-tag';\n\n\n// mutation to login a user\nexport const LOGIN_USER = gql`\n    mutation loginUser($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n        token\n            user {\n                _id\n                username\n                email\n        }\n    }\n}\n`;\n\n// mutation to add user \nexport const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!, $password: String!) {\n        addUser(username: $username, email: $email, password: $password) {\n            token\n                user {\n                    _id\n                    username\n                    email\n                }\n            }\n        }\n`;\n\n\n// mutation to save U.S. state search\nexport const SAVE_STATE = gql`\nmutation saveStateSearch($input: stateInput!) {\n    saveStateSearch(input: $input) {\n        _id\n        username\n        savedStateSearch {\n            stateId\n            name\n            confirmed\n            newConfirmed\n            deaths\n            newDeaths                   \n        }     \n    }\n}\n`;\n\n\n// mutation to remove U.S. state search\nexport const REMOVE_STATE_SEARCH = gql`\nmutation removeStateSearch($stateId: String!) {\n    removeStateSearch(stateId: $stateId) {\n        _id\n        username\n        savedStateSearch {\n            stateId\n            name\n            confirmed\n            newConfirmed\n            deaths\n            newDeaths\n        }\n    }\n}\n`;","// page for signup component\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../utils/mutations';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER); \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: {...userFormData}\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n        {error && <div>Sign up failed</div>}\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;","// page for login component\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../utils/mutations';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  // initialize mutation\n  const [loginUser, {error} ] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: {...userFormData} \n      });\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n        {error && <div>Login failed</div>}\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","// page for navbar component\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\nimport Auth from '../utils/auth';\n\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='danger' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n           <strong>Pandem<span className=\"title\">opedia</span></strong> <img src=\"https://img.icons8.com/cotton/50/000000/protection-mask--v6.png\" alt=\"mask-icon\"/>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              {/* <Nav.Link as={Link} to='/'>\n                Placeholder\n              </Nav.Link> */}\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    Saved Searches\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar; ","import React from 'react';\n\nfunction Footer() {   \n    return (\n    <div className=\"page-footer footer\" id=\"footer\">\n        Information provided by John Hopkins University\n    </div>\n    )\n}\n\nexport default Footer;\n","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { PieChart, Pie, Cell } from 'recharts';\n\n\nconst COLORS = ['#ffc107', '#29a744', '#dc3644'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default class GlobalTotalChart extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n        data: [],\n        loaded: false \n      }    \n  }\n\n  componentDidMount() {\n    return fetch('https://corona.azure-api.net/all')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      this.setState({\n        data: [\n          {\n            name: 'Active', value: responseJson[0].globalData.Active\n          },\n          {\n            name: 'Recovered', value: responseJson[0].globalData.Recovered\n          },\n          {\n            name: 'Deaths', value: responseJson[0].globalData.Deaths\n          }\n        ]\n    })\n    this.setState({ loaded: true })\n  })\n};\n\n  render() {\n    if (this.state.loaded === false)\n      return (\n      <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)\n\n    else \n      return (\n        <PieChart width={350} height={350}>\n          <Pie\n            data={this.state.data}\n            cx={100}\n            cy={100}\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {\n              this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            }\n          </Pie>\n        </PieChart>\n        );\n      }\n    }\n\n  ","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { PieChart, Pie, Cell } from 'recharts';\n\n\nconst COLORS = ['#0088FE','#29a744', '#dc3644'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default class GlobalNewChart extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n        data: [],\n        loaded: false \n      }    \n  }\n\n  componentDidMount() {\n    return fetch('https://corona.azure-api.net/all')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      this.setState({\n        data: [\n          {\n            name: 'Confirmed', value: responseJson[0].globalData.NewConfirmed\n          },\n          {\n            name: 'Recovered', value: responseJson[0].globalData.NewRecovered\n          },\n          {\n            name: 'Deaths', value: responseJson[0].globalData.NewDeaths\n          }\n        ]\n    })\n    this.setState({ loaded: true })\n  })\n};\n\n  render() {\n    if (this.state.loaded === false)\n      return (\n      <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)\n    else \n      return (\n          <PieChart width={350} height={350}>\n            <Pie\n              data={this.state.data}\n              cx={100}\n              cy={100}\n              labelLine={false}\n              label={renderCustomizedLabel}\n              outerRadius={100}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n            >\n              {\n                this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n              }\n            </Pie>\n          </PieChart>\n        );\n      }\n    }","import React from 'react'; \nimport Moment from 'react-moment';\nimport { Card, Row, Col, Spinner} from 'react-bootstrap';\nimport GlobalTotalChart from './GlobalTotalChart';\nimport GlobalNewChart from './GlobalNewChart';\n\nexport default class GlobalCard extends React.Component {\n    state = {\n        loading: true,\n        world: null\n    }; \n\n    async componentDidMount() {\n        const api = \"https://corona.azure-api.net/all\";\n        const response = await fetch(api);\n        const data = await response.json();\n\n        this.setState({ world: data[0], loading: false});\n    }\n    render() {\n        return (\n            <>\n            <div>\n                {this.state.loading || !this.state.world ? (\n                    <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                ):(\n                    <Card border=\"white\" className=\"homepage-card\">\n                    <div>\n                        <div>\n                            <h4 className=\"text-center\">GLOBAL TOTAL CASES</h4>\n                            <h3 className=\"text-primary text-center\">{this.state.world.globalData.Confirmed.toLocaleString()}</h3>\n                            <br></br>\n                            <Row>\n                            <Col xs={7} md={7}>\n                            <p className=\"badge badge-warning\">Active:</p> {this.state.world.globalData.Active.toLocaleString()}\n                            <br></br>\n                            <p className=\"badge badge-success\">Recovered:</p> {this.state.world.globalData.Recovered.toLocaleString()}\n                            <br></br>\n                            <p className=\"badge badge-danger\">Deaths:</p> {this.state.world.globalData.Deaths.toLocaleString()}\n                            </Col>\n                            <Col xs={4} md={4}>\n                            <GlobalTotalChart/>\n                            </Col>\n                            </Row>\n\n                            <h4 className=\"text-center\">GLOBAL NEW CASES</h4>\n                            <h3 className=\"text-primary text-center\">{this.state.world.globalData.NewConfirmed.toLocaleString()}</h3>\n                            <br></br>\n                            <Row>\n                            <Col xs={7} md={7}>\n                            <p className=\"badge badge-success\">Recovered:</p> {this.state.world.globalData.NewRecovered.toLocaleString()}\n                            <br></br>\n                            <p className=\"badge badge-danger\">Deaths: </p> {this.state.world.globalData.NewDeaths.toLocaleString()}\n                            </Col>\n                            <Col xs={4} md={4}>\n                            <GlobalNewChart/>\n                            </Col>\n                            </Row>\n                            Last Updated: <Moment format=\"MMMM Do, YYYY hh:mm a\">{this.state.world.globalData.Last_Update}</Moment>\n                        </div>\n                    </div>\n                    </Card>\n                )}\n            </div>\n            </>\n        )\n    }\n}","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst COLORS = ['#ffc107', '#29a744', '#dc3644'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default class CountryTotalChart extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n        data: [],\n        loaded: false \n      }    \n  }\n\n  componentDidMount() {\n    return fetch('https://corona.azure-api.net/all')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      this.setState({\n        data: [\n          {\n            name: 'Active', value: responseJson[0].countryData[165].US.Summary.Active\n          },\n          {\n            name: 'Recovered', value: responseJson[0].countryData[165].US.Summary.Recovered\n          },\n          {\n            name: 'Deaths', value: responseJson[0].countryData[165].US.Summary.Deaths\n          }\n        ]\n    })\n    this.setState({ loaded: true })\n  })\n};\n\n  render() {\n    if (this.state.loaded === false)\n    return (\n      <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)\n    else \n      return (\n        <PieChart width={350} height={350}>\n          <Pie\n            data={this.state.data}\n            cx={100}\n            cy={100}\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {\n              this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            }\n          </Pie>\n        </PieChart>\n        );\n      }\n    }\n","import React, { PureComponent } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst COLORS = ['#0088FE', '#29a744', '#dc3644'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default class CountryNewChart extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n        data: [],\n        loaded: false \n      }    \n  }\n\n  componentDidMount() {\n    return fetch('https://corona.azure-api.net/all')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      this.setState({\n        data: [\n          {\n            name: 'Confirmed', value: responseJson[0].countryData[165].US.Summary.NewConfirmed\n          },\n          {\n            name: 'Recovered', value: responseJson[0].countryData[165].US.Summary.NewRecovered\n          },\n          {\n            name: 'Deaths', value: responseJson[0].countryData[165].US.Summary.NewDeaths\n          }\n        ]\n    })\n    this.setState({ loaded: true })\n  })\n};\n\n  render() {\n    if (this.state.loaded === false)\n      return (\n      <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)\n    else \n      return (\n        <PieChart width={350} height={350}>\n          <Pie\n            data={this.state.data}\n            cx={100}\n            cy={100}\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {\n              this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            }\n          </Pie>\n        </PieChart>\n        );\n  }\n}","import React from 'react'; \nimport { Card, Spinner, Row, Col} from 'react-bootstrap';\nimport CountryTotalChart from './CountryTotalChart';\nimport CountryNewChart from './CountryNewChart';\n\nexport default class CountryCard extends React.Component {\n    state = {\n        loading: true,\n        us: null\n    }; \n\n    async componentDidMount() {\n        const api = \"https://corona.azure-api.net/all\";\n        const response = await fetch(api);\n        const data = await response.json();\n        \n        this.setState({ us: data[0], loading: false});\n    }\n    render() {\n    return (\n        <>\n        <div>\n            {this.state.loading || !this.state.us ? (\n                <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            ):(\n                <Card border=\"white\" className=\"homepage-card\">\n                <div>\n                    <div>\n                        <h4 className=\"text-center\">US TOTAL CASES</h4>\n                        <h3 className=\"text-primary text-center\">{this.state.us.countryData[165].US.Summary.Confirmed.toLocaleString()}</h3>\n                        <br></br>\n                        <Row>\n                        <Col xs={7} md={7}>\n                        <p className=\"badge badge-warning\">Active:</p> {this.state.us.countryData[165].US.Summary.Active.toLocaleString()}\n                        <br></br>\n                        <p className=\"badge badge-success\">Recovered:</p> {this.state.us.countryData[165].US.Summary.Recovered.toLocaleString()}\n                        <br></br>\n                        <p className=\"badge badge-danger\">Deaths:</p> {this.state.us.countryData[165].US.Summary.Deaths.toLocaleString()}\n                        </Col>\n                        <Col xs={4} md={4}>\n                        <CountryTotalChart/>\n                        </Col>\n                        </Row>\n\n                        <h4 className=\"text-center\">US NEW CASES</h4>\n                        <h3 className=\"text-primary text-center\">{this.state.us.countryData[165].US.Summary.NewConfirmed.toLocaleString()}</h3>\n                        <br></br>\n                        <Row>\n                        <Col xs={7} md={7}>\n                        <p className=\"badge badge-success\">Recovered:</p> {this.state.us.countryData[165].US.Summary.NewRecovered.toLocaleString()}\n                        <br></br>\n                        <p className=\"badge badge-danger\">Deaths: </p> {this.state.us.countryData[165].US.Summary.NewDeaths.toLocaleString()}\n                        </Col>\n                        <Col xs={4} md={4}>\n                        <CountryNewChart/>\n                        </Col>\n                        </Row>\n                    </div>\n                </div>\n                </Card> \n            )}\n        </div>\n        </>\n    )\n}\n}","import React from 'react';\nimport { Card, Row, Col} from 'react-bootstrap';\nimport Moment from 'react-moment';\n\n\nconst StateCard = ({value}) => {\n  return (\n    <>\n    <div>\n        <Card border=\"black\" className=\"homepage-card\" style={{ paddingTop: 10, paddingLeft: 10, paddingBottom: 10}}>\n            <div>\n                <div>\n                    <h1>Your Search Results:</h1>\n                    <br></br>\n                    <Row>\n                    <Col xs={9} md={6}>\n                    <h4 className=\"text-center\">{value.name.toUpperCase()} TOTAL CASES</h4> \n                    <h3 className=\"text-primary text-center\">{value.confirmed.toLocaleString()}</h3>\n                    <br></br>\n                    <p className=\"badge badge-danger\">Deaths:</p> {value.deaths.toLocaleString()}\n                    <br></br>\n                    </Col>\n                \n                    <Col xs={9} md={6}>\n                    <h4 className=\"text-center\">{value.name.toUpperCase()} NEW CASES</h4>\n                    <h3 className=\"text-primary text-center\">{value.newConfirmed.toLocaleString()}</h3>\n                    <br></br>\n                    <p className=\"badge badge-danger\">Deaths: </p> {value.newDeaths.toLocaleString()}\n                    <br></br>\n                    <br></br>\n                    </Col>\n                    </Row>\n                    Last Updated: <Moment format=\"MMMM Do, YYYY hh:mm a\">{value.Last_Update}</Moment>\n                </div>\n            </div>\n            </Card>\n    </div>\n    </>\n  )\n}\n\nexport default StateCard;","import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\nfunction Chart() {\n    const [apiData, setApiData] = useState([]);\n\n    useEffect(() => {\n        componentDidMount()\n    }, [])\n\n    async function componentDidMount() {\n        const api = \"https://api.covidtracking.com/v1/us/daily.json\";\n        const response = await fetch(api);\n        const data = await response.json();\n\n        setApiData(\n            [{\n                Positive: data[60].positiveIncrease,\n            }, {\n                Positive: data[59].positiveIncrease,\n            }, {\n                Positive: data[58].positiveIncrease,\n            }, {\n                Positive: data[57].positiveIncrease,\n            }, {\n                Positive: data[56].positiveIncrease,\n            }, {\n                Positive: data[55].positiveIncrease,\n            }, {\n                Positive: data[54].positiveIncrease,\n            }, {\n                Positive: data[53].positiveIncrease,\n            }, {\n                Positive: data[52].positiveIncrease,\n            }, {\n                Positive: data[51].positiveIncrease,\n            }, {\n                Positive: data[50].positiveIncrease,\n            }, {\n                Positive: data[49].positiveIncrease,\n            }, {\n                Positive: data[48].positiveIncrease,\n            }, {\n                Positive: data[47].positiveIncrease,\n            }, {\n                Positive: data[46].positiveIncrease,\n            }, {\n                Positive: data[45].positiveIncrease,\n            }, {\n                Positive: data[44].positiveIncrease,\n            }, {\n                Positive: data[43].positiveIncrease,\n            }, {\n                Positive: data[42].positiveIncrease,\n            }, {\n                Positive: data[41].positiveIncrease,\n            }, {\n                Positive: data[40].positiveIncrease,\n            }, {\n                Positive: data[39].positiveIncrease,\n            }, {\n                Positive: data[30].positiveIncrease,\n            }, {\n                Positive: data[38].positiveIncrease,\n            }, {\n                Positive: data[37].positiveIncrease,\n            }, {\n                Positive: data[36].positiveIncrease,\n            }, {\n                Positive: data[35].positiveIncrease,\n            }, {\n                Positive: data[34].positiveIncrease,\n            }, {\n                Positive: data[33].positiveIncrease,\n            }, {\n                Positive: data[32].positiveIncrease,\n            }, {\n                Positive: data[31].positiveIncrease,\n            }, {\n                Positive: data[30].positiveIncrease,\n            }, {\n                Positive: data[29].positiveIncrease,\n            }, {\n                Positive: data[28].positiveIncrease,\n            }, {\n                Positive: data[27].positiveIncrease,\n            }, {\n                Positive: data[26].positiveIncrease,\n            }, {\n                Positive: data[25].positiveIncrease,\n            }, {\n                Positive: data[24].positiveIncrease,\n            }, {\n                Positive: data[23].positiveIncrease,\n            }, {\n                Positive: data[22].positiveIncrease,\n            }, {\n                Positive: data[21].positiveIncrease,\n            }, {\n                Positive: data[20].positiveIncrease,\n            }, {\n                Positive: data[19].positiveIncrease,\n            }, {\n                Positive: data[18].positiveIncrease,\n            }, {\n                Positive: data[17].positiveIncrease,\n            }, {\n                Positive: data[16].positiveIncrease,\n            }, {\n                Positive: data[15].positiveIncrease,\n            }, {\n                Positive: data[14].positiveIncrease,\n            }, {\n                Positive: data[13].positiveIncrease,\n            }, {\n                Positive: data[12].positiveIncrease,\n            }, {\n                Positive: data[11].positiveIncrease,\n            }, {\n                Positive: data[10].positiveIncrease,\n            }, {\n                Positive: data[9].positiveIncrease,\n            }, {\n                Positive: data[8].positiveIncrease,\n            }, {\n                Positive: data[7].positiveIncrease,\n            }, {\n                Positive: data[6].positiveIncrease,\n            }, {\n                Positive: data[5].positiveIncrease,\n            }, {\n                Positive: data[4].positiveIncrease,\n            }, {\n                Positive: data[3].positiveIncrease,\n            }, {\n                Positive: data[2].positiveIncrease,\n            }, {\n                Positive: data[1].positiveIncrease,\n            }, {\n                name: \"Today\",\n                Positive: data[0].positiveIncrease,\n                Deaths: data[0].deathIncrease,\n            }]\n        )\n    }\n\n    return (\n\n        < div >\n            {apiData ? (<LineChart\n                width={600}\n                height={300}\n                data={\n                    apiData\n                }\n                margin={{\n                    top: 5, right: 30, left: 40, bottom: 5,\n                }\n                }\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line dataKey=\"Positive\" fill=\"#008000\" />\n\n            </LineChart >) : null\n            }\n        </div >\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nfunction Chart() {\n    const [apiData, setApiData] = useState([]);\n\n    useEffect(() => {\n        componentDidMount()\n    }, [])\n\n    async function componentDidMount() {\n        const api = \"https://api.covidtracking.com/v1/us/daily.json\";\n        const response = await fetch(api);\n        const data = await response.json();\n\n        setApiData(\n            [{\n                Deaths: data[60].deathIncrease,\n            }, {\n                Deaths: data[59].deathIncrease,\n            }, {\n                Deaths: data[58].deathIncrease,\n            }, {\n                Deaths: data[57].deathIncrease,\n            }, {\n                Deaths: data[56].deathIncrease,\n            }, {\n                Deaths: data[55].deathIncrease,\n            }, {\n                Deaths: data[54].deathIncrease,\n            }, {\n                Deaths: data[53].deathIncrease,\n            }, {\n                Deaths: data[52].deathIncrease,\n            }, {\n                Deaths: data[51].deathIncrease,\n            }, {\n                Deaths: data[50].deathIncrease,\n            }, {\n                Deaths: data[49].deathIncrease,\n            }, {\n                Deaths: data[48].deathIncrease,\n            }, {\n                Deaths: data[47].deathIncrease,\n            }, {\n                Deaths: data[46].deathIncrease,\n            }, {\n                Deaths: data[45].deathIncrease,\n            }, {\n                Deaths: data[44].deathIncrease,\n            }, {\n                Deaths: data[43].deathIncrease,\n            }, {\n                Deaths: data[42].deathIncrease,\n            }, {\n                Deaths: data[41].deathIncrease,\n            }, {\n                Deaths: data[40].deathIncrease,\n            }, {\n                Deaths: data[39].deathIncrease,\n            }, {\n                Deaths: data[38].deathIncrease,\n            }, {\n                Deaths: data[37].deathIncrease,\n            }, {\n                Deaths: data[36].deathIncrease,\n            }, {\n                Deaths: data[35].deathIncrease,\n            }, {\n                Deaths: data[34].deathIncrease,\n            }, {\n                Deaths: data[33].deathIncrease,\n            }, {\n                Deaths: data[32].deathIncrease,\n            }, {\n                Deaths: data[31].deathIncrease,\n            }, {\n                Deaths: data[30].deathIncrease,\n            }, {\n                Deaths: data[29].deathIncrease,\n            }, {\n                Deaths: data[28].deathIncrease,\n            }, {\n                Deaths: data[27].deathIncrease,\n            }, {\n                Deaths: data[26].deathIncrease,\n            }, {\n                Deaths: data[25].deathIncrease,\n            }, {\n                Deaths: data[24].deathIncrease,\n            }, {\n                Deaths: data[23].deathIncrease,\n            }, {\n                Deaths: data[22].deathIncrease,\n            }, {\n                Deaths: data[21].deathIncrease,\n            }, {\n                Deaths: data[20].deathIncrease,\n            }, {\n                Deaths: data[19].deathIncrease,\n            }, {\n                Deaths: data[18].deathIncrease,\n            }, {\n                Deaths: data[17].deathIncrease,\n            }, {\n                Deaths: data[16].deathIncrease,\n            }, {\n                Deaths: data[15].deathIncrease,\n            }, {\n                Deaths: data[14].deathIncrease,\n            }, {\n                Deaths: data[13].deathIncrease,\n            }, {\n                Deaths: data[12].deathIncrease,\n            }, {\n                Deaths: data[11].deathIncrease,\n            }, {\n                Deaths: data[10].deathIncrease,\n            }, {\n                Deaths: data[9].deathIncrease,\n            }, {\n                Deaths: data[8].deathIncrease,\n            }, {\n                Deaths: data[7].deathIncrease,\n            }, {\n                Deaths: data[6].deathIncrease,\n            }, {\n                Deaths: data[5].deathIncrease,\n            }, {\n                Deaths: data[4].deathIncrease,\n            }, {\n                Deaths: data[3].deathIncrease,\n            }, {\n                Deaths: data[2].deathIncrease,\n            }, {\n                Deaths: data[1].deathIncrease,\n            }, {\n                name: \"Today\",\n                Deaths: data[0].deathIncrease,\n            }]\n        )\n    }\n\n    return (\n        < div >\n            {/* comment */}\n            {apiData ? (<LineChart\n                width={600}\n                height={300}\n                data={\n                    // comment\n                    apiData\n                }\n                margin={{\n                    top: 5, right: 30, left: 40, bottom: 5,\n                }\n                }\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line dataKey=\"Deaths\" fill=\"#FF0000\" />\n\n            </LineChart >) : null\n            }\n        </div >\n    )\n}\n\nexport default Chart;","export const getSavedStateIds = () => {\n  const savedStateIds = localStorage.getItem('saved_state_search')\n    ? JSON.parse(localStorage.getItem('saved_state_search'))\n    : [];\n\n  return savedStateIds;\n};\n\nexport const saveStateIds = (stateIdArr) => {\n  if (stateIdArr.length) {\n    localStorage.setItem('saved_state_search', JSON.stringify(stateIdArr));\n  } else {\n    localStorage.removeItem('saved_state_search');\n  }\n};\n\nexport const removeStateId = (stateId) => {\n  const savedStateIds = localStorage.getItem('saved_state_search')\n    ? JSON.parse(localStorage.getItem('saved_state_search'))\n    : null;\n\n  if (!savedStateIds) {\n    return false;\n  }\n\n  const updatedSavedStateIds = savedStateIds?.filter((savedStateId) => savedStateId !== stateId);\n  localStorage.setItem('saved_state_search', JSON.stringify(updatedSavedStateIds));\n\n  return true;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Form, Col, Button, Row } from 'react-bootstrap';\nimport GlobalCard from '../components/GlobalCard';\nimport CountryCard from '../components/CountryCard';\nimport StateCard from '../components/StateCard';\nimport { searchByState } from '../utils/API';\nimport TimelineCases from '../components/TimelineCases';\nimport TimelineDeaths from '../components/TimelineDeaths';\nimport { saveStateIds, getSavedStateIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SAVE_STATE } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\n\nconst Homepage = () => {\n\n    // create state for holding returned api data\n    const [searchedUsState, setSearchedUsState] = useState([]);\n\n    // create state for holding our search field data\n    const [searchInput, setSearchInput] = useState(''); \n\n    // create state for holding state Ids\n    const [holdStateId, setHoldStateId] = useState('');\n\n    let stateData = {};\n\n    // create state to hold saved stateID values\n    const [savedStateIds, setSavedStateIds] = useState(getSavedStateIds()); \n\n    // save the state info \n    const [saveState, { error }] = useMutation(SAVE_STATE);  \n\n    // set up useEffect hook to save 'saveStateIds' list to localStorage\n    useEffect(() => {\n    return () => saveStateIds(savedStateIds);\n    });\n\n  \n    // set setSearchUsState back to original state after state search\n    useEffect(() => {\n        if (searchedUsState.length > 0) {\n            return () => setSearchedUsState([])}\n        })\n\n    // create method to search for US States and set state on form submit\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!searchInput) {\n            return false;\n        }\n\n        try {\n            const response = await searchByState(searchInput.toLowerCase());\n      \n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const data = await response.json();\n      \n            stateData = {\n                confirmed: data.Confirmed,\n                deaths: data.Deaths,\n                newConfirmed: data.NewConfirmed,\n                newDeaths: data.NewDeaths,\n                lastUpdate: data.Last_Update,\n                name: searchInput.toLowerCase(),\n                stateId: data.Slug_State\n            };\n      \n            // set state with savedStateId\n            setSavedStateIds([...savedStateIds, stateData.stateId]);\n      \n            // set state with stateId to be used in handleSaveSearch\n            setHoldStateId(stateData.stateId);\n      \n            // clear out search form\n            setSearchInput('');\n            \n            // retain the searched data, so it can be passed, as prop, to StateCard\n            setSearchedUsState([...searchedUsState, stateData]);\n            \n            } catch (err) {\n              console.error(err);\n            }\n      \n    };\n\n\n    // function to handle saving a state to the database\n    const handleSaveState = async () => {\n    \n        // find the state in `savedStateIds` state by the matching id\n        const stateId = savedStateIds.find((search) => search === holdStateId);\n    \n        // get token\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n    \n        if (!token) {\n            return false;\n        }\n\n        try {\n            const { data } = await saveState({\n            variables: { input: searchedUsState[0]}\n        });\n\n      \n    \n\n        if (error) {\n            throw new Error('something went wrong!');\n        }\n\n        // if search successfuly saves to user's account, save state ID to state\n        setSavedStateIds([...savedStateIds, holdStateId]);\n   \n        // setting back to empty string for next save\n        setHoldStateId('')\n    \n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n      \n    return (\n        <>\n        <Jumbotron className='text-light bg-danger' style={{ width: '100%', height: 560, paddingTop: 200, paddingLeft: 100}}>\n          <Container>\n            <h5>Search for your state</h5>\n            < Form onSubmit={handleFormSubmit}>\n              <Form.Row>\n                <Col xs={8} md={8}>\n                  <Form.Control\n                    name='searchInput'\n                    value={searchInput.toLowerCase()}\n                    onChange={(e) => setSearchInput(e.target.value)}\n                    type='text'\n                    size='md'\n                    placeholder='Enter a state'\n                  />\n                  <i className=\"app-claim\">* This application is intended for US states only</i>\n                </Col>\n                <Col xs={4} md={4}>\n                  <Button type='submit' variant='danger' size='md'>\n                    Search\n                  </Button>\n                </Col>\n              </Form.Row>\n            </Form>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid>\n            <Row>\n                <Col sm={12} md={12}>\n                    { searchedUsState.length > 0 ? <StateCard value = {searchedUsState[0]}  /> : null }\n                    {Auth.loggedIn() && searchedUsState.length > 0 && (\n                        <Button onClick = {handleSaveState}>\n                            Save    \n                        </Button>\n                    )}\n                    \n                </Col>\n            </Row>\n        </Container> \n\n        <Container>\n          <center><img src=\"https://www.knightdesign.com.au/wp-content/uploads/2020/03/COVID-19.png\" alt=\"covid-logo\" style={{ height: 300, width: 650 }}></img></center>\n        </Container>\n\n        <Container fluid>\n            <Row>\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\n                    <GlobalCard/>\n                </Col>\n\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\n                    <CountryCard />\n                </Col>\n           </Row>\n        </Container>\n\n        <Container fluid className=\"time-series\">\n            <h1 className=\"time-header text-center\">US Time Series (60 Day Trend)</h1><br></br>\n            <Row style={{paddingLeft: 25, paddingBottom: 100}}>\n              <Col sm=\"12\" md=\"12\" lg=\"6\">\n                <TimelineCases/>\n              </Col>\n              \n\n              <Col sm=\"12\" md=\"12\" lg=\"6\">\n                <TimelineDeaths/>\n              </Col>\n            </Row>\n\n\n    \n            <Row>\n                <Col sm=\"12\" md='12'>\n                    <center><img src=\"https://completemusicupdate.com/wp-content/uploads/2020/03/stopthespread1250.jpg\" alt=\"stopspread\" style={{paddingBottom: 100}}></img></center>\n                </Col>\n            </Row>\n        </Container>\n      </>\n    );\n};\n\nexport default Homepage;","// search for covid data by State\nexport const searchByState = (query) => {\n  console.log(query);\n  return fetch(`https://corona.azure-api.net/country/us/${query}`);\n  \n};\n\n// searcg fir covid data by city (not being used at this time)\nexport const searchByCity = (query, cityQuery) => {\n  console.log(query);\n  console.log(cityQuery);\n  return fetch(`https://corona.azure-api.net/country/us/${query}/${cityQuery}`); \n};","// dependency\nimport gql from 'graphql-tag';\n\n// queries for logged in users\nexport const GET_ME = gql`\n{\n    me {\n        _id\n        username\n        email\n        stateCount\n        savedStateSearch {\n            name\n            confirmed\n            newConfirmed\n            deaths\n            newDeaths\n            stateId\n        }\n    }\n}\n`;\n\n\n","import React from 'react';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { removeStateId } from '../utils/localStorage'; \nimport { useQuery, useMutation } from '@apollo/react-hooks'; \nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_STATE_SEARCH } from '../utils/mutations';\nimport Moment from 'react-moment';\n\nconst SavedStateSearch = () => {\n  \n    // mutation to remove a search\n    const [removeStateSearch, { error }] = useMutation(REMOVE_STATE_SEARCH);\n  \n    // query the user data, which contains saved searches\n    const { loading, data } = useQuery(GET_ME); \n  \n    // userData is provided by the database or is an empty object\n    const userData = data?.me || {};\n  \n  \n    // create function that accepts the states's ID value as param and deletes the state search from the database\n    const handleDeleteStateSearch = async (stateId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n          return false;\n      }\n\n      try {\n          const { data } = await removeStateSearch({\n              variables: { stateId }\n      })\n     \n      if (error) {\n          throw new Error('something went wrong!');\n      }\n\n      // upon success, remove state's id from localStorage\n      removeStateId(stateId);\n    \n      } catch (err) {\n          console.error(err);\n      }\n    };\n\n    // if data isn't here yet, say so\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    console.log('returned data', userData);\n   return (\n     <>\n        <Container fluid>\n            <h2>{userData.savedStateSearch && userData.savedStateSearch.length ? `${userData.username} has ${userData.savedStateSearch.length} saved ${userData.savedStateSearch.length === 1 ? 'search' : 'searches'}`\n                : `${userData.username} has no saved searches!`}\n            </h2>\n        </Container>\n        <div>\n            <Card border=\"white\" className=\"homepage-card\" style={{ paddingTop: 10, paddingLeft: 10, paddingBottom: 10}}>\n             <div>\n                <div>\n                    <h1 className=\"text-center\">Your Saved Searches:</h1>\n                    <br></br>\n                    {userData.savedStateSearch.map((search) => {\n                        return (\n                    <Row key={search.stateId}>   \n                    <Col xs={9} md={6}>\n                    <h4 className=\"text-center\">{search.name.toUpperCase()} TOTAL CASES</h4> \n                    <h3 className=\"text-primary text-center\">{search.confirmed.toLocaleString()}</h3>\n                    <br></br>\n                    <p className=\"badge badge-danger\">Deaths:</p> {search.deaths.toLocaleString()}\n                    <br></br>\n                    </Col>\n                \n                    <Col xs={9} md={6}>\n                    <h4 className=\"text-center\">{search.name.toUpperCase()} NEW CASES</h4>\n                    <h3 className=\"text-primary text-center\">{search.newConfirmed.toLocaleString()}</h3>\n                    <br></br>\n                    <p className=\"badge badge-danger\">Deaths: </p> {search.newDeaths.toLocaleString()}\n                    </Col>\n                    <Col md={6}>\n                    Last Updated: <Moment format=\"MMMM Do, YYYY hh:mm a\">{search.lastUpdate}</Moment>\n                    </Col>\n\n                    <Col md={6}>\n                    <Button type='submit' variant='danger' size='md' style={{ justifyContent: 'flex-end'}} onClick={() => handleDeleteStateSearch(search.stateId)}>Delete this search</Button>\n                    </Col>\n                    </Row>\n                    )})}\n                </div>\n                \n            </div>\n            </Card>\n            \n        \n     \n    </div>\n     </>\n   );\n};\n\nexport default SavedStateSearch;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// apollo provider \nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n// components and pages\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Homepage from './pages/Homepage';\nimport SavedSearch from './pages/SavedSearch';\n\n\n// establish apollo client\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql'\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Homepage} />\n            <Route exact path='/saved' component={SavedSearch} /> \n            <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n          </Switch>\n          <Footer/>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App';\nimport * as serviceWorker from '../src/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// YOU NEED TO REGISTER TO MAKE the service worker .. work.\nserviceWorker.register();\n"],"sourceRoot":""}